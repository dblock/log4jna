version: 2.0.{build}
image: Visual Studio 2015

branches:
  only:
  - master

environment:
  MAVEN_HOME: C:\maven\apache-maven-3.3.9
  PATH: C:\maven\apache-maven-3.3.9\bin;$(JAVA_HOME)\bin;C:\Program Files (x86)\Windows Kits\10\bin\x64;$(PATH)
  MAVEN_OPTS: -Xmx4g
  JAVA_OPTS: -Xmx4g
  M2: $(USERPROFILE)\.m2
  SETTINGS_ENC: $(APPVEYOR_BUILD_FOLDER)\log4jna-build\Maven\settings.xml.enc
  SETTINGS_SEC_ENC: $(APPVEYOR_BUILD_FOLDER)\log4jna-build\Maven\settings-security.xml.enc
  M2_SETTINGS: $(USERPROFILE)\.m2\settings.xml
  M2_SETTINGS_SEC: $(USERPROFILE)\.m2\settings-security.xml
  M2_SETTINGS_ENC: $(USERPROFILE)\.m2\settings.xml.enc
  M2_SETTINGS_SEC_ENC: $(USERPROFILE)\.m2\settings-security.xml.enc
  GNUPG_HOME: $(USERPROFILE)\.gnupg
  PUB_KEY_FILE_ENC: $(APPVEYOR_BUILD_FOLDER)\log4jna-build\Maven\log4jnapublic.gpg.asc.enc
  SEC_KEY_FILE_ENC: $(APPVEYOR_BUILD_FOLDER)\log4jna-build\Maven\log4jnasecret.gpg.asc.enc
  PUB_KEY_FILE_ENC_DEST: $(USERPROFILE)\log4jnapublic.gpg.asc.enc
  SEC_KEY_FILE_ENC_DEST: $(USERPROFILE)\log4jnasecret.gpg.asc.enc
  PUB_KEY_FILE_GPG: $(USERPROFILE)\log4jnapublic.gpg.asc
  SEC_KEY_FILE_GPG: $(USERPROFILE)\log4jnasecret.gpg.asc
  SECURE_FILE_DIR: C:\appveyor-tools
  SECURE_FILE_CMD: C:\appveyor-tools\secure-file.exe
  SECURE_FILE_DEC: '-decrypt'
  SECURE_FILE_SEC: '-secret'

  # Enrypted value on dblock's account.
  secret:
    secure: 2jB/P5OINYqlYP3vH2SkPolt/GG6eP8WpL2XOXszfwY=

install:

  # Prepare VC environment
  - |
   "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat"

  # Install secure-file if not present
  - ps: |
     if (!(Test-Path -Path $env:SECURE_FILE_DIR )) {
        cd C:\
        iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1'))
        cd $env:APPVEYOR_BUILD_FOLDER
     }

   # Install Maven if not present
  - ps: |
      Add-Type -AssemblyName System.IO.Compression.FileSystem
      if (!(Test-Path -Path "C:\maven" )) {
        (new-object System.Net.WebClient).DownloadFile(
          'https://dlcdn.apache.org/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.zip',
          'C:\maven-bin.zip'
        )
        [System.IO.Compression.ZipFile]::ExtractToDirectory("C:\maven-bin.zip", "C:\maven")

      }

      # Test if .m2 exists and create or update maven settings
      if(!(Test-Path -Path $env:M2)) {
          New-Item $env:M2 -type directory -Verbose
          # Install maven settings
          Copy-Item $env:SETTINGS_ENC $env:M2_SETTINGS_ENC -Verbose
          Copy-Item $env:SETTINGS_SEC_ENC $env:M2_SETTINGS_SEC_ENC -Verbose
          & $env:SECURE_FILE_CMD $env:SECURE_FILE_DEC $env:M2_SETTINGS_ENC $env:SECURE_FILE_SEC $env:secret
          & $env:SECURE_FILE_CMD $env:SECURE_FILE_DEC $env:M2_SETTINGS_SEC_ENC $env:SECURE_FILE_SEC $env:secret
      } else {
      # The directory exists test Meven settings
        if (!(Test-Path $env:M2_SETTINGS_ENC) -or ((Get-FileHash $env:M2_SETTINGS_ENC).hash -ne (Get-FileHash $env:SETTINGS_ENC).hash)) {
          Copy-Item $env:SETTINGS_ENC $env:M2_SETTINGS_ENC -Verbose
          & $env:SECURE_FILE_CMD $env:SECURE_FILE_DEC $env:M2_SETTINGS_ENC $env:SECURE_FILE_SEC $env:secret
        } else {
          Write-Host "$env:M2_SETTINGS_ENC up to date"
        }

        if (!(Test-Path $env:M2_SETTINGS_SEC_ENC) -or ((Get-FileHash $env:M2_SETTINGS_SEC_ENC).hash -ne (Get-FileHash $env:SETTINGS_SEC_ENC).hash)) {
          Copy-Item $env:SETTINGS_SEC_ENC $env:M2_SETTINGS_SEC_ENC -Verbose
          & $env:SECURE_FILE_CMD $env:SECURE_FILE_DEC $env:M2_SETTINGS_SEC_ENC $env:SECURE_FILE_SEC $env:secret
        } else {
          Write-Host "$env:M2_SETTINGS_SEC up to date"
        }
      }

  # Decrypt and install gpg keys
  - | 
      "%SECURE_FILE_CMD%" %SECURE_FILE_DEC% %PUB_KEY_FILE_ENC% %SECURE_FILE_SEC% %secret% -out %PUB_KEY_FILE_GPG%
      "%SECURE_FILE_CMD%" %SECURE_FILE_DEC% %SEC_KEY_FILE_ENC% %SECURE_FILE_SEC% %secret% -out %SEC_KEY_FILE_GPG%
      gpg --import %PUB_KEY_FILE_GPG%
      gpg --import %SEC_KEY_FILE_GPG%

# Ignore changes that not affect the build
skip_commits:
  files:
    - '**/*.md'
    - '**/*.txt'
    - '**/.gitignore'
    - '**/.project'
    - '**/.classpath'
    - 'appveyor.yml'
    - 'appveyor-mvn-release.yml'

# For build and test we need to pass -Djna.nosys=true  to avoid exception:
# java.lang.UnsatisfiedLinkError: Can't obtain updateLastError method for class com.sun.jna.Native
build_script:
  - mvn clean site site:stage deploy -B -Djna.nosys=true -P deploy

test: off
# Maven run the tests as part of the build we do not need to run them again

cache:
  # Cache all installed software and gpg and maven directories
  - '%SECURE_FILE_DIR%'
  - '%MAVEN_HOME%'
  # Rebuild .m2 if the maven setting changed (It prbably is more efficient to test the files hashes)
  - '%M2%'
